syntax = "proto3";
option go_package = "nika_application";

message CreateApplicationRequest{
  string git = 1;
  uint32 type = 2;
  uint32 status = 3;
  repeated uint64 userIDList = 4;
  repeated string projectNameList = 5;
  string tenant = 6;
  string description = 7;
  repeated Environment Environments = 8;
  string name = 9;
  string drone = 10;
  string sonarQube = 11;
}
message CreateApplicationResponse{
  uint64 appID = 1;
}

message AppChart {
   string Repository = 1;
   string URL = 2;
   string Name = 3;
   string Version = 4;
}
message Environment {
  string Name = 1;
  string Value=2;
   string Namespace =3;
   string Release=4;
   AppChart Chart=5;
   string ValueTemplate=6;
   uint64 ClusterID = 7;
}

message GetApplicationRequest{
  uint64 appID = 1;
}
message GetApplicationResponse{
    CreateApplicationRequest app = 1;
    string createAt =2;
    string updateAt = 3;
    uint64 appID =4;
}

message UpdateApplicationRequest {
  CreateApplicationRequest app = 1;
  uint64 appID = 2;
}
message UpdateApplicationResponse {
}
message ListApplicationRequest{
  string tenant = 1;
  string project = 2;
  int64 offset = 3;
  int64 limit = 4;
}
message ListApplicationResponse{
  repeated GetApplicationResponse applications = 1;
}

message Project {
  uint64 ID = 1;
  string project = 2;
  string description = 3;
  string tenant =4;
}
message Projects {
  repeated Project projects = 1;
}
message CreateProjectRequest{
  string project = 1;
  string description = 2;
  string tenant =3;
}
message GetProjectRequest{
  uint64 ID = 1;
}
message ListProjectRequest{
  string tenant = 1;
  int64 offset = 3;
  int64 limit = 4;
}
message PatchEnvRequest {
    repeated Environment Environments =1 ;
    uint64 ID = 2;
}
service NikaApplication{
  rpc CreateApplication(CreateApplicationRequest) returns (CreateApplicationResponse) {}
  rpc UpdateApplication(UpdateApplicationRequest) returns (UpdateApplicationResponse) {}
  rpc GetApplication(GetApplicationRequest) returns (GetApplicationResponse) {}
  rpc ListApplication(ListApplicationRequest) returns (ListApplicationResponse) {}
  rpc DeleteApplication(GetApplicationRequest) returns (UpdateApplicationResponse) {}
  rpc PatchEnv(PatchEnvRequest) returns(GetApplicationResponse){}



  rpc CreateProject(CreateProjectRequest) returns (Project) {}
  rpc UpdateProject(Project) returns (Project) {}
  rpc GetProject(GetProjectRequest) returns (Project) {}
  rpc ListProject(ListProjectRequest) returns (Projects) {}
  rpc DeleteProject(GetProjectRequest) returns (UpdateApplicationResponse) {}

}
